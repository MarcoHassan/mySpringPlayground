plugins {

    // Spring Plug-ins
    id 'org.springframework.boot' version '2.4.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    
    id 'java'
    // id 'war'
    
    // Microsoft Webapp Plug-in
    id "com.microsoft.azure.azurewebapp" version "1.2.0"
}


group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {

    // Api documentation 
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.4'
    implementation 'io.swagger:swagger-annotations:1.6.4'
    
    // ok; now you can see the endpoints at: http://localhost:8080/v3/api-docs/
    // you can change this in your spring configuraitons application.yml file
    
    // http://localhost:8080/swagger-ui/index.html - you will find a page with your APIs here.
    // can change as well in your application config file.
    
    // spring - starter MVC
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Spring - WebFlux - Asynchronous Backend
    // it's an either or between this and MVC. include the right starter depending on the runtime 
    // you want to develop on. 
    // implementation 'org.springframework.boot:spring-boot-starter-webflux'


    // Azure Libraries // 

    // This is a nice library Valerio pointed you to
    // the basic idea is that on their website https://github.com/Azure/azure-sdk-for-java/blob/main/sdk/boms/azure-sdk-bom/README.md
    // you find the spring version compatible version library.
    // then when applying this one you should not specify versions for the azure sdk
    // bom will select the relevant version that is compatible with that Spring release
    implementation platform('com.azure:azure-sdk-bom:1.0.1')

    // Blob
    implementation 'com.azure:azure-storage-blob' 

    // For managing authentication in the cloud
    implementation 'com.azure:azure-identity:1.4.4'	

    // Dot-env Library
    implementation 'io.github.cdimascio:java-dotenv:3.0.0'

    // Spring - Reactor
    implementation 'io.projectreactor:reactor-core' 

    // For testing reactor steps
    testImplementation 'io.projectreactor:reactor-test'
	
}

// For working with Azure Webapps
// you specify how to set it up over here. 
azurewebapp {
    subscription = '2b136b02-de43-446b-b3cb-e47b93f819f0'
    resourceGroup = 'rg-marco'
    appName = 'test32'
    pricingTier = 'F1'
    region = 'westeurope'
    runtime {
      os = 'Linux'
      webContainer = 'Java SE'    // or 'Java SE' if you want to run an executable jar
                                  // stay with Tomcat as this is the server of choice to this stage.
      javaVersion = 'Java 11'
    }
//    appSettings {
//        <key> = <value>
//    }
    auth {
        type = 'azure_cli' // support azure_cli, oauth2, device_code and service_principal
    }
}

test {
	useJUnitPlatform()
}
